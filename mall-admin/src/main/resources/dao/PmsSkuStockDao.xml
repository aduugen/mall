<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.dao.PmsSkuStockDao">
    <insert id="insertList">
        INSERT INTO pms_sku_stock (product_id, sku_code, price, stock, low_stock, pic, sale, sp_data) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.productId,jdbcType=BIGINT},
            #{item.skuCode,jdbcType=VARCHAR},
            #{item.price,jdbcType=DECIMAL},
            #{item.stock,jdbcType=INTEGER},
            #{item.lowStock,jdbcType=INTEGER},
            #{item.pic,jdbcType=VARCHAR},
            #{item.sale,jdbcType=INTEGER},
            #{item.spData,jdbcType=VARCHAR})
        </foreach>
    </insert>
    <insert id="replaceList">
        REPLACE INTO pms_sku_stock (id,product_id, sku_code, price, stock, low_stock,pic, sale, sp_data) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=BIGINT},
            #{item.productId,jdbcType=BIGINT},
            #{item.skuCode,jdbcType=VARCHAR},
            #{item.price,jdbcType=DECIMAL},
            #{item.stock,jdbcType=INTEGER},
            #{item.lowStock,jdbcType=INTEGER},
            #{item.pic,jdbcType=VARCHAR},
            #{item.sale,jdbcType=INTEGER},
            #{item.spData,jdbcType=VARCHAR})
        </foreach>
    </insert>
    <select id="getStockAlarmList" resultType="com.macro.mall.model.PmsSkuStock">
        SELECT
            s.*,
            p.name as productName
        FROM
            pms_sku_stock s
        LEFT JOIN
            pms_product p ON s.product_id = p.id
        WHERE
            s.stock &lt;= s.low_stock
            AND p.delete_status = 0
            AND p.publish_status = 1
        ORDER BY
            (s.stock / s.low_stock) ASC
    </select>
    
    <select id="getStockAlarmListByPage" resultType="com.macro.mall.model.PmsSkuStock">
        SELECT
            s.*,
            p.name as productName
        FROM
            pms_sku_stock s
        LEFT JOIN
            pms_product p ON s.product_id = p.id
        WHERE
            s.stock &lt;= s.low_stock
            AND p.delete_status = 0
            AND p.publish_status = 1
        ORDER BY
            (s.stock / s.low_stock) ASC
        LIMIT #{pageNum}, #{pageSize}
    </select>
    
    <select id="getStockAlarmCount" resultType="java.lang.Long">
        SELECT
            COUNT(*)
        FROM
            pms_sku_stock s
        LEFT JOIN
            pms_product p ON s.product_id = p.id
        WHERE
            s.stock &lt;= s.low_stock
            AND p.delete_status = 0
            AND p.publish_status = 1
    </select>
</mapper>