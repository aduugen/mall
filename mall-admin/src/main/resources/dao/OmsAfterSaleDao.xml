<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.dao.OmsAfterSaleDao">
    <resultMap id="afterSaleDetailMap" type="com.macro.mall.dto.AdminOmsAfterSaleDTO" extends="com.macro.mall.mapper.OmsAfterSaleMapper.BaseResultMap">
       <result column="member_nickname" property="memberNickname"/>
        <result column="member_phone" property="memberPhone"/>
        <result column="order_total_amount" property="orderTotalAmount"/>
    </resultMap>

    <!-- 获取售后申请列表 -->
    <select id="getList" resultMap="afterSaleDetailMap">
        SELECT
            a.*,
            m.nickname as member_nickname,
            m.phone as member_phone
        FROM
            oms_after_sale a
        LEFT JOIN 
            ums_member m ON a.member_id = m.id
        <where>
            <if test="queryParam.id != null">
                AND a.id = #{queryParam.id}
            </if>
            <if test="queryParam.status != null">
                AND a.status = #{queryParam.status}
            </if>
            <if test="queryParam.memberId != null">
                AND a.member_id = #{queryParam.memberId}
            </if>
            <if test="queryParam.memberName != null">
                AND (m.username LIKE concat('%',#{queryParam.memberName},'%') 
                    OR m.nickname LIKE concat('%',#{queryParam.memberName},'%'))
            </if>
            <if test="queryParam.createTime != null and queryParam.createTime != ''">
                AND a.create_time >= STR_TO_DATE(#{queryParam.createTime}, '%Y-%m-%d')
                AND a.create_time &lt; DATE_ADD(STR_TO_DATE(#{queryParam.createTime}, '%Y-%m-%d'), INTERVAL 1 DAY)
            </if>
            <if test="queryParam.handleMan != null and queryParam.handleMan != ''">
                AND a.handle_man LIKE concat('%',#{queryParam.handleMan},'%')
            </if>
            <if test="queryParam.handleTime != null and queryParam.handleTime != ''">
                AND a.handle_time >= STR_TO_DATE(#{queryParam.handleTime}, '%Y-%m-%d')
                AND a.handle_time &lt; DATE_ADD(STR_TO_DATE(#{queryParam.handleTime}, '%Y-%m-%d'), INTERVAL 1 DAY)
            </if>
            <if test="queryParam.refundStatus != null">
                AND a.refund_status = #{queryParam.refundStatus}
            </if>
        </where>
        ORDER BY a.create_time DESC
    </select>

    <select id="selectAfterSaleItems" resultType="com.macro.mall.model.OmsAfterSaleItem">
        SELECT * FROM oms_after_sale_item
        WHERE after_sale_id = #{id} AND del_flag = 0
    </select>

    <select id="selectAfterSaleProcesses" resultType="com.macro.mall.model.OmsAfterSaleProcess">
        SELECT * FROM oms_after_sale_process
        WHERE after_sale_id = #{id}
        ORDER BY create_time ASC
    </select>

    <select id="selectAfterSaleProofs" resultType="com.macro.mall.model.OmsAfterSaleProof">
        SELECT * FROM oms_after_sale_proof
        WHERE after_sale_id = #{id}
    </select>

    <select id="selectAfterSaleLogs" resultType="com.macro.mall.model.OmsAfterSaleLog">
        SELECT * FROM oms_after_sale_log
        WHERE after_sale_id = #{id}
        ORDER BY create_time ASC
    </select>

    <!-- 获取售后申请详情 -->
    <select id="getDetail" resultMap="afterSaleDetailMap">
        SELECT
            a.*,
            m.nickname as member_nickname,
            m.phone as member_phone,
            o.total_amount as order_total_amount
        FROM
            oms_after_sale a
        LEFT JOIN 
            ums_member m ON a.member_id = m.id
        LEFT JOIN 
            oms_order o ON a.order_id = o.id
        WHERE
            a.id = #{id}
    </select>

    <!-- 获取售后状态统计 -->
    <select id="getAfterSaleStatistic" resultType="com.macro.mall.dto.OmsAfterSaleStatistic">
        SELECT
            COUNT(*) as totalCount,
            SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) as pendingCount,
            SUM(CASE WHEN status > 0 AND status &lt; 9 THEN 1 ELSE 0 END) as processingCount,
            SUM(CASE WHEN status = 9 THEN 1 ELSE 0 END) as completedCount,
            SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) as rejectedCount
        FROM
            oms_after_sale
    </select>

    <!-- 查询售后操作日志，用于审计和统计分析 -->
    <select id="queryOperationLogs" resultType="com.macro.mall.model.OmsAfterSaleLog">
        SELECT 
            log.*
        FROM 
            oms_after_sale_log log
        WHERE 
            1 = 1
        <if test="afterSaleId != null">
            AND log.after_sale_id = #{afterSaleId}
        </if>
        <if test="operateMan != null and operateMan != ''">
            AND log.operator_id = #{operateMan}
        </if>
        <if test="operateType != null">
            AND log.operate_type = #{operateType}
        </if>
        <if test="afterSaleStatus != null">
            AND log.status = #{afterSaleStatus}
        </if>
        <if test="startTime != null">
            AND log.create_time &gt;= #{startTime}
        </if>
        <if test="endTime != null">
            AND log.create_time &lt;= #{endTime}
        </if>
        ORDER BY 
            log.create_time DESC
    </select>
    
    <!-- 统计各种操作类型的数量 -->
    <select id="countOperationsByType" resultType="java.util.Map">
        SELECT 
            operate_type, 
            COUNT(*) as count 
        FROM 
            oms_after_sale_log 
        <where>
            <if test="startTime != null">
                AND create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND create_time &lt;= #{endTime}
            </if>
            <if test="operateMan != null and operateMan != ''">
                AND operator_id = #{operateMan}
            </if>
        </where>
        GROUP BY 
            operate_type
    </select>
    
    <!-- 统计各状态售后单操作耗时 -->
    <select id="getStatusTransitionTime" resultType="java.util.Map">
        SELECT 
            t1.after_sale_id,
            t1.from_status,
            t1.to_status,
            t1.operator_id,
            TIMESTAMPDIFF(HOUR, t1.create_time, t2.create_time) as hours_spent
        FROM 
            (SELECT 
                after_sale_id, 
                operator_id,
                status as to_status,
                (
                    SELECT MAX(l2.status) 
                    FROM oms_after_sale_log l2 
                    WHERE 
                        l2.after_sale_id = log.after_sale_id 
                        AND l2.create_time &lt; log.create_time
                ) as from_status,
                create_time
             FROM 
                oms_after_sale_log log
             WHERE 
                create_time BETWEEN #{startTime} AND #{endTime}
            ) t1
        JOIN 
            oms_after_sale_log t2 
        ON 
            t1.after_sale_id = t2.after_sale_id 
            AND t1.create_time = t2.create_time
        WHERE 
            t1.from_status IS NOT NULL
    </select>

    <!-- 获取售后统计信息 -->
    <select id="getStatistic" resultType="com.macro.mall.dto.OmsAfterSaleStatistic">
        SELECT 
            SUM(CASE WHEN status = 0 THEN 1 ELSE 0 END) as pendingCount,
            SUM(CASE WHEN status IN (1, 3, 4, 5, 6, 7, 8) THEN 1 ELSE 0 END) as processingCount,
            SUM(CASE WHEN status = 9 THEN 1 ELSE 0 END) as completedCount,
            SUM(CASE WHEN status = 2 THEN 1 ELSE 0 END) as rejectedCount,
            COUNT(1) as totalCount,
            SUM(CASE WHEN status = 8 THEN return_amount ELSE 0 END) as pendingRefundAmount,
            SUM(CASE WHEN status = 9 THEN return_amount ELSE 0 END) as refundedAmount,
            AVG(CASE 
                WHEN status = 9 AND create_time IS NOT NULL AND refund_time IS NOT NULL 
                THEN TIMESTAMPDIFF(HOUR, create_time, refund_time) 
                ELSE NULL 
            END) as avgProcessTime,
            SUM(CASE WHEN TO_DAYS(NOW()) = TO_DAYS(create_time) THEN 1 ELSE 0 END) as todayNewCount,
            SUM(CASE WHEN TO_DAYS(NOW()) = TO_DAYS(refund_time) AND status = 9 THEN 1 ELSE 0 END) as todayCompletedCount,
            SUM(CASE WHEN YEARWEEK(DATE_FORMAT(create_time, '%Y-%m-%d')) = YEARWEEK(NOW()) THEN 1 ELSE 0 END) as weekNewCount,
            SUM(CASE WHEN YEARWEEK(DATE_FORMAT(refund_time, '%Y-%m-%d')) = YEARWEEK(NOW()) AND status = 9 THEN 1 ELSE 0 END) as weekCompletedCount,
            SUM(CASE WHEN DATE_FORMAT(create_time, '%Y-%m') = DATE_FORMAT(NOW(), '%Y-%m') THEN 1 ELSE 0 END) as monthNewCount,
            SUM(CASE WHEN DATE_FORMAT(refund_time, '%Y-%m') = DATE_FORMAT(NOW(), '%Y-%m') AND status = 9 THEN 1 ELSE 0 END) as monthCompletedCount
        FROM 
            oms_after_sale
    </select>
</mapper>