<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.mapper.OmsAfterSaleRefundMapper">
    <resultMap id="BaseResultMap" type="com.macro.mall.model.OmsAfterSaleRefund">
        <id column="id" property="id"/>
        <result column="after_sale_id" property="afterSaleId"/>
        <result column="refund_no" property="refundNo"/>
        <result column="refund_amount" property="refundAmount"/>
        <result column="refund_type" property="refundType"/>
        <result column="refund_status" property="refundStatus"/>
        <result column="refund_time" property="refundTime"/>
        <result column="refund_note" property="refundNote"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, after_sale_id, refund_no, refund_amount, refund_type,
        refund_status, refund_time, refund_note, create_time, update_time
    </sql>

    <!-- 插入记录 -->
    <insert id="insert" parameterType="com.macro.mall.model.OmsAfterSaleRefund" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO oms_after_sale_refund (
            after_sale_id, refund_no, refund_amount, refund_type,
            refund_status, refund_time, refund_note, create_time, update_time
        )
        VALUES (
            #{afterSaleId}, #{refundNo}, #{refundAmount}, #{refundType},
            #{refundStatus}, #{refundTime}, #{refundNote}, NOW(), NOW()
        )
    </insert>

    <!-- 根据主键查询 -->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM oms_after_sale_refund
        WHERE id = #{id}
    </select>

    <!-- 根据售后单ID查询 -->
    <select id="selectByAfterSaleId" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM oms_after_sale_refund
        WHERE after_sale_id = #{afterSaleId}
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据退款单号查询 -->
    <select id="selectByRefundNo" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM oms_after_sale_refund
        WHERE refund_no = #{refundNo}
    </select>
    
    <!-- 根据退款状态查询 -->
    <select id="selectByRefundStatus" resultMap="BaseResultMap">
        SELECT 
        <include refid="Base_Column_List"/>
        FROM oms_after_sale_refund
        WHERE refund_status = #{refundStatus}
        ORDER BY create_time DESC
    </select>
    
    <!-- 更新退款状态 -->
    <update id="updateRefundStatus">
        UPDATE oms_after_sale_refund
        SET refund_status = #{refundStatus},
            <if test="refundTime != null">
                refund_time = #{refundTime},
            </if>
            <if test="refundNote != null and refundNote != ''">
                refund_note = #{refundNote},
            </if>
            update_time = NOW()
        WHERE id = #{id}
    </update>
    
    <!-- 根据售后单ID更新退款状态 -->
    <update id="updateRefundStatusByAfterSaleId">
        UPDATE oms_after_sale_refund
        SET refund_status = #{refundStatus},
            <if test="refundTime != null">
                refund_time = #{refundTime},
            </if>
            <if test="refundNote != null and refundNote != ''">
                refund_note = #{refundNote},
            </if>
            update_time = NOW()
        WHERE after_sale_id = #{afterSaleId}
    </update>
    
    <!-- 删除退款记录 -->
    <delete id="deleteByPrimaryKey">
        DELETE FROM oms_after_sale_refund
        WHERE id = #{id}
    </delete>
    
    <!-- 删除售后单的所有退款记录 -->
    <delete id="deleteByAfterSaleId">
        DELETE FROM oms_after_sale_refund
        WHERE after_sale_id = #{afterSaleId}
    </delete>
    
    <!-- 统计待处理退款数量 -->
    <select id="countPendingRefund" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM oms_after_sale_refund
        WHERE refund_status = 0
    </select>
    
    <!-- 统计退款成功数量 -->
    <select id="countSuccessRefund" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM oms_after_sale_refund
        WHERE refund_status = 1
    </select>
    
    <!-- 统计退款失败数量 -->
    <select id="countFailedRefund" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM oms_after_sale_refund
        WHERE refund_status = 2
    </select>
    
    <!-- 查询退款金额总和 -->
    <select id="sumRefundAmount" resultType="java.math.BigDecimal">
        SELECT SUM(refund_amount)
        FROM oms_after_sale_refund
        WHERE refund_status = 1
    </select>
</mapper> 