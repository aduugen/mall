<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.mapper.OmsAfterSaleProcessMapper">
    <resultMap id="BaseResultMap" type="com.macro.mall.model.OmsAfterSaleProcess">
        <id column="id" property="id"/>
        <result column="after_sale_id" property="afterSaleId"/>
        <result column="handle_man_id" property="handleManId"/>
        <result column="handle_time" property="handleTime"/>
        <result column="handle_note" property="handleNote"/>
        <result column="process_type" property="processType"/>
        <result column="process_result" property="processResult"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="version" property="version"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List">
        id, after_sale_id, handle_man_id, handle_time, handle_note, process_type, 
        process_result, create_time, update_time, version
    </sql>

    <!-- 根据条件查询售后处理记录列表 -->
    <select id="selectByExample" parameterType="com.macro.mall.model.OmsAfterSaleProcessExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from oms_after_sale_process
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <!-- 根据主键查询售后处理记录 -->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List"/>
        from oms_after_sale_process
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!-- 根据售后单ID查询售后处理记录 -->
    <select id="selectByAfterSaleId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List"/>
        from oms_after_sale_process
        where after_sale_id = #{afterSaleId,jdbcType=BIGINT}
        order by create_time desc
    </select>

    <!-- 根据售后单ID列表批量查询售后处理记录 -->
    <select id="selectByAfterSaleIds" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List"/>
        from oms_after_sale_process
        where after_sale_id in
        <foreach collection="afterSaleIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        order by create_time desc
    </select>

    <!-- 根据主键删除售后处理记录 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from oms_after_sale_process
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <!-- 根据条件删除售后处理记录 -->
    <delete id="deleteByExample" parameterType="com.macro.mall.model.OmsAfterSaleProcessExample">
        delete from oms_after_sale_process
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>

    <!-- 插入售后处理记录 -->
    <insert id="insert" parameterType="com.macro.mall.model.OmsAfterSaleProcess" useGeneratedKeys="true" keyProperty="id">
        insert into oms_after_sale_process (
            after_sale_id, handle_man_id, handle_time, 
            handle_note, process_type, process_result, 
            create_time, update_time, version
        )
        values (
            #{afterSaleId,jdbcType=BIGINT}, #{handleManId,jdbcType=BIGINT}, #{handleTime,jdbcType=TIMESTAMP}, 
            #{handleNote,jdbcType=VARCHAR}, #{processType,jdbcType=INTEGER}, #{processResult,jdbcType=INTEGER}, 
            now(), now(), 0
        )
    </insert>

    <!-- 选择性插入售后处理记录 -->
    <insert id="insertSelective" parameterType="com.macro.mall.model.OmsAfterSaleProcess" useGeneratedKeys="true" keyProperty="id">
        insert into oms_after_sale_process
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="afterSaleId != null">
                after_sale_id,
            </if>
            <if test="handleManId != null">
                handle_man_id,
            </if>
            <if test="handleTime != null">
                handle_time,
            </if>
            <if test="handleNote != null">
                handle_note,
            </if>
            <if test="processType != null">
                process_type,
            </if>
            <if test="processResult != null">
                process_result,
            </if>
            create_time,
            update_time,
            version,
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="afterSaleId != null">
                #{afterSaleId,jdbcType=BIGINT},
            </if>
            <if test="handleManId != null">
                #{handleManId,jdbcType=BIGINT},
            </if>
            <if test="handleTime != null">
                #{handleTime,jdbcType=TIMESTAMP},
            </if>
            <if test="handleNote != null">
                #{handleNote,jdbcType=VARCHAR},
            </if>
            <if test="processType != null">
                #{processType,jdbcType=INTEGER},
            </if>
            <if test="processResult != null">
                #{processResult,jdbcType=INTEGER},
            </if>
            now(),
            now(),
            0,
        </trim>
    </insert>

    <!-- 批量插入售后处理记录 -->
    <insert id="batchInsert" parameterType="java.util.List">
        insert into oms_after_sale_process (
            after_sale_id, handle_man_id, handle_time, 
            handle_note, process_type, process_result, 
            create_time, update_time, version
        )
        values
        <foreach collection="list" item="item" separator=",">
            (
                #{item.afterSaleId,jdbcType=BIGINT}, #{item.handleManId,jdbcType=BIGINT}, #{item.handleTime,jdbcType=TIMESTAMP}, 
                #{item.handleNote,jdbcType=VARCHAR}, #{item.processType,jdbcType=INTEGER}, #{item.processResult,jdbcType=INTEGER}, 
                now(), now(), 0
            )
        </foreach>
    </insert>

    <!-- 根据条件修改售后处理记录 -->
    <update id="updateByExampleSelective" parameterType="map">
        update oms_after_sale_process
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.afterSaleId != null">
                after_sale_id = #{record.afterSaleId,jdbcType=BIGINT},
            </if>
            <if test="record.handleManId != null">
                handle_man_id = #{record.handleManId,jdbcType=BIGINT},
            </if>
            <if test="record.handleTime != null">
                handle_time = #{record.handleTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.handleNote != null">
                handle_note = #{record.handleNote,jdbcType=VARCHAR},
            </if>
            <if test="record.processType != null">
                process_type = #{record.processType,jdbcType=INTEGER},
            </if>
            <if test="record.processResult != null">
                process_result = #{record.processResult,jdbcType=INTEGER},
            </if>
            update_time = now(),
            version = version + 1,
        </set>
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </update>

    <!-- 根据主键选择性修改售后处理记录 -->
    <update id="updateByPrimaryKeySelective" parameterType="com.macro.mall.model.OmsAfterSaleProcess">
        update oms_after_sale_process
        <set>
            <if test="afterSaleId != null">
                after_sale_id = #{afterSaleId,jdbcType=BIGINT},
            </if>
            <if test="handleManId != null">
                handle_man_id = #{handleManId,jdbcType=BIGINT},
            </if>
            <if test="handleTime != null">
                handle_time = #{handleTime,jdbcType=TIMESTAMP},
            </if>
            <if test="handleNote != null">
                handle_note = #{handleNote,jdbcType=VARCHAR},
            </if>
            <if test="processType != null">
                process_type = #{processType,jdbcType=INTEGER},
            </if>
            <if test="processResult != null">
                process_result = #{processResult,jdbcType=INTEGER},
            </if>
            update_time = now(),
            version = version + 1,
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 根据主键修改售后处理记录 -->
    <update id="updateByPrimaryKey" parameterType="com.macro.mall.model.OmsAfterSaleProcess">
        update oms_after_sale_process
        set after_sale_id = #{afterSaleId,jdbcType=BIGINT},
            handle_man_id = #{handleManId,jdbcType=BIGINT},
            handle_time = #{handleTime,jdbcType=TIMESTAMP},
            handle_note = #{handleNote,jdbcType=VARCHAR},
            process_type = #{processType,jdbcType=INTEGER},
            process_result = #{processResult,jdbcType=INTEGER},
            update_time = now(),
            version = version + 1
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 更新处理状态 -->
    <update id="updateProcessStatus">
        update oms_after_sale_process
        set process_result = #{processResult,jdbcType=INTEGER},
            handle_note = #{handleNote,jdbcType=VARCHAR},
            handle_time = now(),
            update_time = now(),
            version = version + 1
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 批量更新处理状态 -->
    <update id="batchUpdateProcessStatus">
        update oms_after_sale_process
        set process_result = #{processResult,jdbcType=INTEGER},
            handle_note = #{handleNote,jdbcType=VARCHAR},
            handle_time = now(),
            update_time = now(),
            version = version + 1
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!-- 根据售后ID删除处理记录 -->
    <delete id="deleteByAfterSaleId" parameterType="java.lang.Long">
        delete from oms_after_sale_process
        where after_sale_id = #{afterSaleId,jdbcType=BIGINT}
    </delete>

    <!-- 根据处理类型统计记录数 -->
    <select id="countByProcessType" parameterType="java.lang.Integer" resultType="java.lang.Long">
        select count(*)
        from oms_after_sale_process
        where process_type = #{processType,jdbcType=INTEGER}
    </select>

    <!-- 根据处理结果统计记录数 -->
    <select id="countByProcessResult" parameterType="java.lang.Integer" resultType="java.lang.Long">
        select count(*)
        from oms_after_sale_process
        where process_result = #{processResult,jdbcType=INTEGER}
    </select>

    <!-- 根据售后ID和处理类型查询处理记录 -->
    <select id="selectByAfterSaleIdAndProcessType" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List"/>
        from oms_after_sale_process
        where after_sale_id = #{afterSaleId,jdbcType=BIGINT}
        and process_type = #{processType,jdbcType=INTEGER}
        order by create_time desc
        limit 1
    </select>
</mapper> 