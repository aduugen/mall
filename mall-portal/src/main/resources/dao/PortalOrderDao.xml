<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macro.mall.portal.dao.PortalOrderDao">
    <resultMap id="orderDetailMap" type="com.macro.mall.portal.domain.OmsOrderDetail"
               extends="com.macro.mall.mapper.OmsOrderMapper.BaseResultMap">
        <collection property="orderItemList" columnPrefix="ot_"
                    resultMap="com.macro.mall.mapper.OmsOrderItemMapper.BaseResultMap">
        </collection>
    </resultMap>
    <select id="getDetail" resultMap="orderDetailMap">
        SELECT
            o.*,
            ot.id ot_id,
            ot.order_id ot_order_id,
            ot.order_sn ot_order_sn,
            ot.product_id ot_product_id,
            ot.product_pic ot_product_pic,
            ot.product_name ot_product_name,
            ot.product_brand ot_product_brand,
            ot.product_sn ot_product_sn,
            ot.product_price ot_product_price,
            ot.product_quantity ot_product_quantity,
            ot.product_sku_id ot_product_sku_id,
            ot.product_sku_code ot_product_sku_code,
            ot.product_category_id ot_product_category_id,
            ot.promotion_name ot_promotion_name,
            ot.promotion_amount ot_promotion_amount,
            ot.coupon_amount ot_coupon_amount,
            ot.integration_amount ot_integration_amount,
            ot.real_amount ot_real_amount,
            ot.gift_integration ot_gift_integration,
            ot.gift_growth ot_gift_growth,
            ot.product_attr ot_product_attr,
            ot.applied_quantity ot_applied_quantity
        FROM
            oms_order o
            LEFT JOIN oms_order_item ot ON o.id = ot.order_id
        WHERE
            o.id = #{orderId}
    </select>

    <select id="getTimeOutOrders" resultMap="orderDetailMap">
        SELECT
            o.*,
            ot.id ot_id,
            ot.order_id ot_order_id,
            ot.order_sn ot_order_sn,
            ot.product_id ot_product_id,
            ot.product_pic ot_product_pic,
            ot.product_name ot_product_name,
            ot.product_brand ot_product_brand,
            ot.product_sn ot_product_sn,
            ot.product_price ot_product_price,
            ot.product_quantity ot_product_quantity,
            ot.product_sku_id ot_product_sku_id,
            ot.product_sku_code ot_product_sku_code,
            ot.product_category_id ot_product_category_id,
            ot.promotion_name ot_promotion_name,
            ot.promotion_amount ot_promotion_amount,
            ot.coupon_amount ot_coupon_amount,
            ot.integration_amount ot_integration_amount,
            ot.real_amount ot_real_amount,
            ot.gift_integration ot_gift_integration,
            ot.gift_growth ot_gift_growth,
            ot.product_attr ot_product_attr,
            ot.applied_quantity ot_applied_quantity
        FROM
            oms_order o
            LEFT JOIN oms_order_item ot ON o.id = ot.order_id
        WHERE
            o.status = 0
            AND o.create_time &lt; date_add(NOW(), INTERVAL -#{minute} MINUTE);
    </select>

    <update id="updateSkuStock">
        UPDATE pms_sku_stock
        SET
            stock = CASE id
            <foreach collection="itemList" item="item">
              WHEN #{item.productSkuId} THEN stock - #{item.productQuantity}
            </foreach>
            END,
            lock_stock = CASE id
            <foreach collection="itemList" item="item">
              WHEN #{item.productSkuId} THEN lock_stock - #{item.productQuantity}
            </foreach>
            END
        WHERE
            id IN
        <foreach collection="itemList" item="item" separator="," open="(" close=")">
            #{item.productSkuId}
        </foreach>
    </update>
    <update id="updateOrderStatus">
        update oms_order
        set status=#{status}
        where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </update>
    <update id="releaseSkuStockLock">
        UPDATE pms_sku_stock
        SET
        lock_stock = CASE id
        <foreach collection="itemList" item="item">
            WHEN #{item.productSkuId} THEN lock_stock - #{item.productQuantity}
        </foreach>
        END
        WHERE
        id IN
        <foreach collection="itemList" item="item" separator="," open="(" close=")">
            #{item.productSkuId}
        </foreach>
    </update>
    <update id="lockStockBySkuId">
        UPDATE pms_sku_stock
        SET lock_stock = lock_stock + #{quantity}
        WHERE
        id = #{productSkuId}
        AND lock_stock + #{quantity} &lt;= stock
    </update>
    <update id="reduceSkuStock">
        UPDATE pms_sku_stock
        SET lock_stock = lock_stock - #{quantity},
            stock = stock - #{quantity}
        WHERE
            id = #{productSkuId}
          AND stock - #{quantity} &gt;= 0
          AND lock_stock - #{quantity} &gt;= 0
    </update>
    <update id="releaseStockBySkuId">
        UPDATE pms_sku_stock
        SET lock_stock = CASE 
                WHEN lock_stock - #{quantity} >= 0 THEN lock_stock - #{quantity}
                ELSE 0
            END
        WHERE
            id = #{productSkuId}
    </update>
</mapper>